// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "evgenij.bx@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/otus.account.delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Delete account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.account.get/{id}": {
            "get": {
                "description": "Get detailed information about a account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account",
                        "schema": {
                            "$ref": "#/definitions/handler.AccountItemResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.account.list": {
            "get": {
                "description": "Get list information about account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get accounts",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved account",
                        "schema": {
                            "$ref": "#/definitions/handler.AccountItemsResponse"
                        }
                    }
                }
            }
        },
        "/otus.account.login": {
            "post": {
                "description": "Get token by UserName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get token by UserName",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AccountLoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/otus.account.register": {
            "post": {
                "description": "Add a new account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register new account",
                "parameters": [
                    {
                        "description": "Account data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.AccountRegisterRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/otus.episode.add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new episode to the catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Create new TV episode",
                "parameters": [
                    {
                        "description": "Episode data",
                        "name": "episode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/catalog.Episode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.EpisodeItemResponse"
                        }
                    }
                }
            }
        },
        "/otus.episode.delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a TV episode from catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Delete episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.episode.get/{id}": {
            "get": {
                "description": "Get detailed information about a TV episode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get episode by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved episode",
                        "schema": {
                            "$ref": "#/definitions/handler.EpisodeItemResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.episode.list": {
            "get": {
                "description": "Get list information about TV episode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Get episodes",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved episode",
                        "schema": {
                            "$ref": "#/definitions/handler.EpisodeItemsResponse"
                        }
                    }
                }
            }
        },
        "/otus.episode.update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update existing TV episode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Update episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "episode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/catalog.Episode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.EpisodeItemResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.season.add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new season to the catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Create new TV season",
                "parameters": [
                    {
                        "description": "Season data",
                        "name": "season",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/catalog.Season"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SeasonItemResponse"
                        }
                    }
                }
            }
        },
        "/otus.season.delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a TV season from catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Delete season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.season.get/{id}": {
            "get": {
                "description": "Get detailed information about a TV season",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Get season by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved season",
                        "schema": {
                            "$ref": "#/definitions/handler.SeasonItemResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.season.list": {
            "get": {
                "description": "Get list information about TV seasons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Get seasons",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved season",
                        "schema": {
                            "$ref": "#/definitions/handler.SeasonItemsResponse"
                        }
                    }
                }
            }
        },
        "/otus.season.update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update existing TV season",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Update season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "season",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/catalog.Season"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SeasonItemResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.serial.add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new serial to the catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "serials"
                ],
                "summary": "Create new TV serial",
                "parameters": [
                    {
                        "description": "Serial data",
                        "name": "serial",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/catalog.Serial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SerialItemResponse"
                        }
                    }
                }
            }
        },
        "/otus.serial.delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a TV serial from catalog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "serials"
                ],
                "summary": "Delete serial",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Serial ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.serial.get/{id}": {
            "get": {
                "description": "Get detailed information about a TV serial",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "serials"
                ],
                "summary": "Get serial by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Serial ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved serial",
                        "schema": {
                            "$ref": "#/definitions/handler.SerialItemResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/otus.serial.list": {
            "get": {
                "description": "Get list information about TV series",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "serials"
                ],
                "summary": "Get serials",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved serial",
                        "schema": {
                            "$ref": "#/definitions/handler.SerialItemsResponse"
                        }
                    }
                }
            }
        },
        "/otus.serial.update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update existing TV serial",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "serials"
                ],
                "summary": "Update serial",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Serial ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update data",
                        "name": "serial",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/catalog.Serial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.SerialItemResponse"
                        }
                    },
                    "400": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "catalog.Episode": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "created_by": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "fileId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "moderated": {
                    "type": "boolean"
                },
                "productionDate": {
                    "type": "string"
                },
                "quality": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "seasonId": {
                    "type": "integer"
                },
                "serialId": {
                    "type": "integer"
                },
                "sort": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "catalog.Season": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "moderated": {
                    "type": "boolean"
                },
                "serialId": {
                    "type": "integer"
                },
                "sort": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "catalog.Serial": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "TV series"
                },
                "duration": {
                    "type": "number",
                    "example": 40
                },
                "fileId": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "productionPeriod": {
                    "type": "string",
                    "example": "2008-2013"
                },
                "quality": {
                    "type": "string",
                    "example": "High"
                },
                "rating": {
                    "type": "number",
                    "example": 9.5
                },
                "sort": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Breaking Bad"
                }
            }
        },
        "handler.AccountItemResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "item": {
                            "$ref": "#/definitions/model.Account"
                        }
                    }
                }
            }
        },
        "handler.AccountItemsResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    }
                }
            }
        },
        "handler.AccountLoginRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "ekobzar"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "handler.AccountRegisterRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "example": "Kobzar"
                },
                "last_name": {
                    "type": "string",
                    "example": ""
                },
                "login": {
                    "type": "string",
                    "example": "ekobzar"
                },
                "name": {
                    "type": "string",
                    "example": "Evgenij"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "handler.DeleteResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "deleted": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "handler.EpisodeItemResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "item": {
                            "$ref": "#/definitions/catalog.Episode"
                        }
                    }
                }
            }
        },
        "handler.EpisodeItemsResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog.Episode"
                            }
                        }
                    }
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "entity not found"
                }
            }
        },
        "handler.SeasonItemResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "item": {
                            "$ref": "#/definitions/catalog.Season"
                        }
                    }
                }
            }
        },
        "handler.SeasonItemsResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog.Season"
                            }
                        }
                    }
                }
            }
        },
        "handler.SerialItemResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "item": {
                            "$ref": "#/definitions/catalog.Serial"
                        }
                    }
                }
            }
        },
        "handler.SerialItemsResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "properties": {
                        "items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/catalog.Serial"
                            }
                        }
                    }
                }
            }
        },
        "model.Account": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "example": "Kobzar"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": ""
                },
                "login": {
                    "type": "string",
                    "example": "ekobzar"
                },
                "name": {
                    "type": "string",
                    "example": "Evgenij"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "",
	Description:      "API for managing TV series catalog",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
